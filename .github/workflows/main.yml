name: Main Foodgram workflow

on:
  push:
    branches:
      - main
      - master

jobs:
  build_and_push_to_docker_hub:
    name: Build and Push Docker images to DockerHub
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, frontend, nginx]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push ${{ matrix.service }} image
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.service }}/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_${{ matrix.service }}:latest

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs: build_and_push_to_docker_hub
    steps:
      - uses: actions/checkout@v3
      - name: Copy docker-compose.yml via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "infra/docker-compose.yml,infra/.env.example"
          target: "~/foodgram"
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd ~/foodgram/infra
            pwd
            ls -a
            cp .env.example .env
            cat > .env <<EOF
            
            DJANGO_DB_ENGINE=${{ secrets.DJANGO_DB_ENGINE }}
            DJANGO_DEBUG=${{ secrets.DJANGO_DEBUG }}
            DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
            DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
            EOF
            cat .env
            sudo docker compose -f docker-compose.yml pull
            sudo docker compose -f docker-compose.yml down
            sudo docker compose -f docker-compose.yml up -d
            sudo docker compose -f docker-compose.yml exec backend python manage.py migrate
            sudo docker compose -f docker-compose.yml exec backend python manage.py collectstatic --noinput

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "Деплой успешно выполнен! Автор: ${{ github.actor }} - ${{ github.event.commits[0].message }}. Ссылка на коммит: https://github.com/${{ github.repository }}/commit/${{github.sha}}"
